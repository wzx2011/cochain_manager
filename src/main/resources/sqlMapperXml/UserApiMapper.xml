<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.cochain.mapper.UserApiMapper" >
	<resultMap id="BaseResultMap" type="com.manage.cochain.entity.vo.UserApiVO" >
		<id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result property="name" column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="loginName" column="login_name" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="password" column="PASSWORD" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="mobile" column="mobile" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="telephone" column="telephone" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="mail" column="mail" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="token" column="token" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="refreshTime" column="refresh_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
		<result property="expiresIn" column="expires_in" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result property="keyStorePath" column="key_store_path" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="state" column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
		<result property="userAddr" column="user_addr" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
		<result property="appid" column="appid" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="role" column="role" jdbcType="TINYINT" javaType="java.lang.Byte" />
		<result property="secretkey" column="secretkey" jdbcType="VARCHAR" javaType="java.lang.String" />
		<result property="txHash" column="tx_hash" jdbcType="VARCHAR" javaType="java.lang.String" />
	</resultMap>

	<sql id="Base_Column_List">
  		id,name,login_name,PASSWORD,mobile,telephone,mail,token,refresh_time,expires_in,key_store_path,state,create_time,user_addr,modify_time,appid,role,secretkey,tx_hash
  	</sql>

	<sql id="UserApi_Query_Where">
	   and 1=1
	</sql>

  	<!--查询所有-->
  	<select id="getUserApiAllList" resultMap="BaseResultMap" parameterType="com.manage.cochain.entity.dto.UserApiDTO">
  		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			t_user
		<where>
			<include refid="UserApi_Query_Where"/>
		</where>
		<if test="start !=null and end !=null" >
			LIMIT  #{start},#{end}
		</if>
  	</select>

	<!--统计数据-->
	<select id="findUserApiTotal" resultType="int" parameterType="com.manage.cochain.entity.dto.UserApiDTO">
		SELECT
			count(*)
		FROM
		t_user
		<where>
			<include refid="UserApi_Query_Where"/>
		</where>
	</select>

  	<!--查询单个-->
  	<select id="getUserApiById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			t_user
		WHERE
			id = #{id,jdbcType=INTEGER}
  	</select>

	<!--新增信息-->
	<insert id="saveUserApi" flushCache="true" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="com.manage.cochain.entity.dto.UserApiDTO">
	    insert into t_user (name,login_name,PASSWORD,mobile,telephone,mail,token,refresh_time,expires_in,key_store_path,state,create_time,user_addr,modify_time,appid,role,secretkey,tx_hash)
			values(#{name,jdbcType=VARCHAR},#{loginName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{mobile,jdbcType=VARCHAR},#{telephone,jdbcType=VARCHAR},#{mail,jdbcType=VARCHAR},#{token,jdbcType=VARCHAR},now(),#{expiresIn,jdbcType=INTEGER},#{keyStorePath,jdbcType=VARCHAR},#{state,jdbcType=INTEGER},now(),#{userAddr,jdbcType=VARCHAR},now(),#{appid,jdbcType=VARCHAR},#{role,jdbcType=TINYINT},#{secretkey,jdbcType=VARCHAR},#{txHash,jdbcType=VARCHAR})
	</insert>

	<!--修改信息-->
	<update id="updateUserApi" parameterType="com.manage.cochain.entity.dto.UserApiDTO" flushCache="true">
		update t_user
		<set>
			<if test="id!=null">id = #{id,jdbcType=INTEGER},</if>
			<if test="name!=null and name!=''">name = #{name,jdbcType=VARCHAR},</if>
			<if test="loginName!=null and loginName!=''">login_name = #{loginName,jdbcType=VARCHAR},</if>
			<if test="password!=null and password!=''">PASSWORD = #{password,jdbcType=VARCHAR},</if>
			<if test="mobile!=null and mobile!=''">mobile = #{mobile,jdbcType=VARCHAR},</if>
			<if test="telephone!=null and telephone!=''">telephone = #{telephone,jdbcType=VARCHAR},</if>
			<if test="mail!=null and mail!=''">mail = #{mail,jdbcType=VARCHAR},</if>
			<if test="token!=null and token!=''">token = #{token,jdbcType=VARCHAR},</if>
			<if test="refreshTime!=null">refresh_time = now(),</if>
			<if test="expiresIn!=null">expires_in = #{expiresIn,jdbcType=INTEGER},</if>
			<if test="keyStorePath!=null and keyStorePath!=''">key_store_path = #{keyStorePath,jdbcType=VARCHAR},</if>
			<if test="state!=null">state = #{state,jdbcType=INTEGER},</if>
			<!--<if test="createTime!=null">create_time = now(),</if>-->
			<if test="userAddr!=null and userAddr!=''">user_addr = #{userAddr,jdbcType=VARCHAR},</if>
			<if test="modifyTime!=null">modify_time = now(),</if>
			<if test="appid!=null and appid!=''">appid = #{appid,jdbcType=VARCHAR},</if>
			<if test="role!=null">role = #{role,jdbcType=TINYINT},</if>
			<if test="secretkey!=null and secretkey!=''">secretkey = #{secretkey,jdbcType=VARCHAR},</if>
			<if test="txHash!=null and txHash!=''">tx_hash = #{txHash,jdbcType=VARCHAR},</if>
		</set>
		where id = #{id ,jdbcType=INTEGER}
	</update>

  	<!--根据id删除信息-->
  	<delete id="deleteUserApiById" flushCache="true">
  		delete from t_user where id = #{id,jdbcType=INTEGER}
  	</delete>

	<!--查询所有-->
	<select id="getUserApiVOList" resultMap="BaseResultMap" parameterType="com.manage.cochain.entity.dto.UserApiDTO">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM
		t_user
		where appid = #{appid,jdbcType=VARCHAR}
	</select>
  	
 </mapper>	