<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.wallet.mapper.WalletTransactionMapper" >
 	 <resultMap id="BaseResultMap" type="com.manage.wallet.entity.vo.WalletTransactionVO" >
	      <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="txHash" column="tx_hash" jdbcType="VARCHAR" javaType="java.lang.String" />
	      <result property="fromid" column="fromid" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="toid" column="toid" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="tokenid" column="tokenid" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="amount" column="amount" jdbcType="INTEGER" javaType="java.lang.Integer" />
	      <result property="createTime" column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
	      <result property="recordTime" column="record_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
	      <result property="state" column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
  	</resultMap>

  	<sql id="Base_Column_List">
  		id,tx_hash,fromid,toid,tokenid,amount,create_time,record_time,state
  	</sql>

	<sql id="WalletTransaction_Query_Where">
	   and 1=1
	</sql>

  	<!--查询所有-->
  	<select id="getWalletTransactionAllList" resultMap="BaseResultMap" parameterType="com.manage.wallet.entity.dto.WalletTransactionDTO">
  		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			w_transaction
		<where>
			<include refid="WalletTransaction_Query_Where"/>
		</where>
		<if test="start !=null and end !=null" >
			LIMIT  #{start},#{end}
		</if>
  	</select>

	<!--统计数据-->
	<select id="findWalletTransactionTotal" resultType="int" parameterType="com.manage.wallet.entity.dto.WalletTransactionDTO">
		SELECT
			count(*)
		FROM
		w_transaction
		<where>
			<include refid="WalletTransaction_Query_Where"/>
		</where>

	</select>

  	<!--查询单个-->
  	<select id="getWalletTransactionById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			w_transaction
		WHERE
			id = #{id,jdbcType=INTEGER}
  	</select>

	<!--新增信息-->
	<insert id="saveWalletTransaction" flushCache="true" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="com.manage.wallet.entity.dto.WalletTransactionDTO">
	    insert into w_transaction (tx_hash,fromid,toid,tokenid,amount,create_time,record_time,state)
			values(#{txHash,jdbcType=VARCHAR},#{fromid,jdbcType=INTEGER},#{toid,jdbcType=INTEGER},#{tokenid,jdbcType=INTEGER},#{amount,jdbcType=INTEGER},now(),now(),#{state,jdbcType=INTEGER})
	</insert>

  	<!--修改信息-->
  	<update id="updateWalletTransaction" parameterType="com.manage.wallet.entity.dto.WalletTransactionDTO" flushCache="true">
  		update w_transaction 
  		<set>
			<if test="id!=null">id = #{id,jdbcType=INTEGER},</if>
			<if test="txHash!=null and txHash!=''">tx_hash = #{txHash,jdbcType=VARCHAR},</if>
			<if test="fromid!=null">fromid = #{fromid,jdbcType=INTEGER},</if>
			<if test="toid!=null">toid = #{toid,jdbcType=INTEGER},</if>
			<if test="tokenid!=null">tokenid = #{tokenid,jdbcType=INTEGER},</if>
			<if test="amount!=null">amount = #{amount,jdbcType=INTEGER},</if>
			<if test="createTime!=null">create_time = now(),</if>
			<if test="recordTime!=null">record_time = now(),</if>
			<if test="state!=null">state = #{state,jdbcType=INTEGER},</if>
  		</set>
  		where id = #{id ,jdbcType=INTEGER}
  	</update>

  	<!--根据id删除信息-->
  	<delete id="deleteWalletTransactionById" flushCache="true">
  		delete from w_transaction where id = #{id,jdbcType=INTEGER}
  	</delete>

	<!-- 根据当前用户id连表查询获取当前用户的钱包交易数据 -->
	<select id="getWalletTransactionByUserId" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
		SELECT
			t1.*,t2.`hash`
		FROM
			w_transaction t1
		LEFT JOIN w_token t2 ON t1.tokenid = t2.id
		WHERE
			t1.tokenid = #{tokenId}
		AND t1.fromid = #{userId}
	</select>
  	
 </mapper>	